<div class="user-profile-container">
  <div class="user-profile">
    <h3 class="user-profile-title">
      Hello <%= @user.first_name %> <%= @user.last_name %>!
    </h3>

    <!-- eventually make these links an AJAX call -->
    <div class="edit-prof"><%= link_to "EDIT PROFILE", edit_user_path %></div>

 <!--  -->
<!--  AJAX request for Add New Bin -->
<div class="ajax-container">

    <div class="row">
      <div class="text-center">
          <!-- Button trigger modal -->
          <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#mynewpost">
            ADD A BIN
          </button>
      </div>
    </div>
    <br>
    <hr>


    <h4 class="exist-title">Your Existing Garbage Bins:</h4>
    <div class="row" id="container_posts">
      <!-- <h3>Your Existing Garbage Bins</h3> -->
      <% @user.spaces.each do |space| %>
      <%#= link_to "Sell Space(s)", user_space_path(@user, space) %>
      <%#= link_to "Buy Space(s)", transactions_path %>
        <%= render space , space: @space %>
      <% end %>
    </div>



    <!-- Modal  create action -->
      <%= form_for([@user,@space], remote: true) do |f| %>
        <div class="modal fade" id="mynewpost" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">

            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title" id="myModalLabel">Spot</h4>
            </div>

      <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
      <style>
        #locationField, #controls {
          position: relative;
          width: 480px;
        }
        #autocomplete {
          position: absolute;
          top: 0px;
          left: 0px;
          width: 99%;
        }

        .pac-container {
          z-index: 1051 !important;
        }

        .label {
          text-align: right;
          font-weight: bold;
          width: 100px;
          color: #303030;
        }
        #address {
          border: 1px solid #000090;
          background-color: #f0f0ff;
          width: 480px;
          padding-right: 2px;
        }
        #address td {
          font-size: 10pt;
        }
        .field {
          width: 99%;
        }
        .slimField {
          width: 80px;
        }
        .wideField {
          width: 200px;
        }
        #locationField {
          height: 20px;
          margin-bottom: 2px;
        }
      </style>

      <div id="locationField">
        <input id="autocomplete" placeholder="Enter your address"
               onFocus="geolocate()" type="text"></input>
      </div>

      <table id="address">
        <tr>
          <td class="label">Street address</td>
          <td class="slimField"><input class="field" id="street_number"
                disabled="true"></input></td>
          <td class="wideField" colspan="2"><input class="field" id="route"
                disabled="true"></input></td>
        </tr>
        <tr>
          <td class="label">City</td>
          <td class="wideField" colspan="3"><input class="field" id="locality"
                disabled="true"></input></td>
        </tr>
        <tr>
          <td class="label">State</td>
          <td class="slimField"><input class="field"
                id="administrative_area_level_1" disabled="true"></input></td>
          <td class="label">Zip code</td>
          <td class="wideField"><input class="field" id="postal_code"
                disabled="true"></input></td>
        </tr>
        <tr>
          <td class="label">Country</td>
          <td class="wideField" colspan="3"><input class="field"
                id="country" disabled="true"></input></td>
        </tr>
      </table>

            </div>
              <div class="field" id="auto-address">
                <%= f.label :address %>
                <%= f.hidden_field :address %>
              </div>
              
              <div class="field">
                <%= f.label :garbage_day %><br>
                <%= f.select(:garbaje_day, ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'], { :class => 'form-control'}) %>
              </div>

            </div>

            <div class="modal-footer">
              <button type="button" class="btn btn-default" data-dismiss="modal" id="mynewpostclose">Close</button>
              <%= submit_tag "Create", class: "btn btn-primary" %>
            </div>
          </div>
        </div>
        </div>
      <% end %>
    <!-- Modal -->

   <!-- this is where we are going to AJAX in the sell space from usr/id/spaces/id -->

</div>

<div id="dropsellspacehere">

</div>


      <script>
        // This example displays an address form, using the autocomplete feature
        // of the Google Places API to help users fill in the information.

        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        var placeSearch, autocomplete;
        var componentForm = {
          street_number: 'short_name',
          route: 'long_name',
          locality: 'long_name',
          administrative_area_level_1: 'short_name',
          country: 'long_name',
          postal_code: 'short_name'
        };

        function initAutocomplete() {
          // Create the autocomplete object, restricting the search to geographical
          // location types.
          autocomplete = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
              {types: ['geocode']});

          // When the user selects an address from the dropdown, populate the address
          // fields in the form.
          autocomplete.addListener('place_changed', fillInAddress);
        }

        function fillInAddress() {
          // Get the place details from the autocomplete object.
          var place = autocomplete.getPlace();
          var complete_address = autocomplete.getPlace().formatted_address
          $('#auto-address input[type="hidden"]').val(complete_address);
          // $(address).attr(place);

          for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
          }

          // Get each component of the address from the place details
          // and fill the corresponding field on the form.
          for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
              var val = place.address_components[i][componentForm[addressType]];
              document.getElementById(addressType).value = val;
            }
          }
        }

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
              var geolocation = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
              };
              var circle = new google.maps.Circle({
                center: geolocation,
                radius: position.coords.accuracy
              });
              autocomplete.setBounds(circle.getBounds());
            });
          }
        }
      </script>
      <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBcXmCTYvA_wuADAjs2MJwyJp97fHPhFDk&libraries=places&callback=initAutocomplete"
          async defer></script>
